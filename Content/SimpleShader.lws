#module Vertex DirectX11_1
cbuffer UIUniform{
	float4x4 Matrix;
};
struct Vertex {
	float4 Position : POSITION;
	float4 Color : COLOR;
	float4 TexCoord : TEXCOORD;
};
struct Pixel {
	float4 Position : SV_POSITION;
	float4 TexCoord : TEXCOORD0;
	float4 Color : COLOR0;
};
Pixel main(Vertex In) {
	Pixel O;
	O.Position = mul(Matrix, In.Position);
	O.TexCoord = In.TexCoord;
	O.Color = In.Color;
	return O;
}
#module Pixel DirectX11_1
struct Pixel {
	float4 Position : SV_POSITION;
	float4 TexCoord : TEXCOORD0;
	float4 Color : COLOR0;
};

Texture2D ShapeTexture;
SamplerState ShapeTextureSampler;

float4 main(Pixel In) : SV_TARGET{
	float4 A = ShapeTexture.Sample(ShapeTextureSampler, In.TexCoord.xy);
	return A*In.Color;
}
#module Vertex OpenGL3_2
#version 330
layout(std140) uniform UIUniform {
	mat4 Matrix;
};
in vec4 Position | 0;
in vec4 Color | 1;
in vec4 TexCoord | 2;
out vec4 pTexCoord;
out vec4 pColor;
void main(void) {
	gl_Position = Matrix*Position;
	pTexCoord = TexCoord;
	pColor = Color;
}
#module Pixel OpenGL3_2
#version 330
in vec4 pTexCoord;
in vec4 pColor;
uniform sampler2D ShapeTexture;
out vec4 p_Color | 0 | Output;
void main(void) {
	vec4 A = texture(ShapeTexture, pTexCoord.xy);
	p_Color = A*pColor;
}
#module Vertex OpenGL2_1
attribute vec4 Position | 0;
attribute vec4 Color | 1;
attribute vec4 TexCoord | 2;
varying vec4 pTexCoord;
varying vec4 pColor;
#block UIUniform
uniform mat4 Matrix;
void main(void) {
	gl_Position = Matrix*Position;
	pTexCoord = TexCoord;
	pColor = Color;
}
#module Pixel OpenGL2_1
varying vec4 pTexCoord;
varying vec4 pColor;
uniform sampler2D ShapeTexture;
void main(void) {
	vec4 A = texture2D(ShapeTexture, pTexCoord.xy);
	gl_FragColor = A*pColor;
}
#module Vertex OpenGLES2
attribute highp vec4 Position | 0;
attribute lowp vec4 Color | 1;
attribute highp vec4 TexCoord | 2;
varying highp vec4 pTexCoord;
varying lowp vec4 pColor;
#block UIUniform
uniform highp mat4 Matrix;
void main(void) {
	gl_Position = Matrix*Position;
	pTexCoord = TexCoord;
	pColor = Color;
}
#module Pixel OpenGLES2
varying highp vec4 pTexCoord;
varying lowp vec4 pColor;
uniform sampler2D ShapeTexture;
void main(void) {
	lowp vec4 A = texture2D(ShapeTexture, pTexCoord.xy);
	gl_FragColor = A*pColor;
}